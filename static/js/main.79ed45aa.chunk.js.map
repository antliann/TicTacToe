{"version":3,"sources":["index.js"],"names":["Square","props","sign","value","width","height","viewBox","fill","xmlns","y","rx","transform","x","fillRule","clipRule","d","className","onClick","keyName","Board","i","this","squares","result","row","thisRow","col","push","renderSquare","React","Component","LeftBoard","button1","button2","easy","hard","id","changeFirst","isHard","changeMode","newGame","Game","state","history","Array","stepNumber","xIsNext","firstIsO","slice","length","calculateWinner","setState","concat","handleClick","count","bot","user","propers","proper","Math","abs","lastMove","counter","splice","floor","random","botMind","setTimeout","botMove","step","winner","X","O","current","moves","map","move","desc","jumpTo","userClick","defineStatus","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79ed45aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    let sign = null;\r\n    if (props.value === 'X') sign =\r\n        <svg width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect y=\"4.94975\" width=\"7\" height=\"72\" rx=\"3.5\" transform=\"rotate(-45 0 4.94975)\" fill=\"#CF0000\"/>\r\n            <rect x=\"50.9117\" width=\"7\" height=\"72\" rx=\"3.5\" transform=\"rotate(45 50.9117 0)\" fill=\"#CF0000\"/>\r\n        </svg>\r\n    if (props.value === 'O') sign =\r\n        <svg width=\"58\" height=\"58\" viewBox=\"0 0 58 58\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                  d=\"M29 58C45.0163 58 58 45.0163 58 29C58 12.9837 45.0163 0 29 0C12.9837 0 0 12.9837 0 29C0 45.0163 12.9837 58 29 58ZM29 51C41.1503 51 51 41.1503 51 29C51 16.8497 41.1503 7 29 7C16.8497 7 7 16.8497 7 29C7 41.1503 16.8497 51 29 51Z\"\r\n                  fill=\"#00B533\"/>\r\n        </svg>\r\n\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n            key={props.keyName}\r\n        >\r\n            {sign}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (<Square\r\n            keyName={'sq' + i}\r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />);\r\n    }\r\n\r\n    render() {\r\n        let result = [];\r\n        for (let row = 0; row < 3; row++) {\r\n            let thisRow = [];\r\n            for (let col = 0; col < 3; col++) {\r\n                thisRow.push(this.renderSquare(row * 3 + col));\r\n            }\r\n            result.push(<div className=\"board-row\"> {thisRow} </div>);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nclass LeftBoard extends React.Component {\r\n    render() {\r\n        let button1, button2;\r\n        if (this.props[\"firstIsO\"]) {\r\n            button1 = <button id='X' className='x-b' onClick={this.props.changeFirst}>\r\n                <svg className='little-signs x' width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"\r\n                     fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect y=\"2.47481\" width=\"3.49991\" height=\"35.9991\" rx=\"1.74996\"\r\n                          transform=\"rotate(-45 0 2.47481)\" fill=\"#CF0000\"/>\r\n                    <rect x=\"25.4552\" width=\"3.49991\" height=\"35.9991\" rx=\"1.74996\" transform=\"rotate(45 25.4552 0)\"\r\n                          fill=\"#CF0000\"/>\r\n                </svg>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                Moves first\r\n            </button>;\r\n            button2 = <button id='O-now' className='x-b selected'>\r\n                <svg className='little-signs o' width=\"29\" height=\"29\" viewBox=\"0 0 29 29\"\r\n                     fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M14.5 29C22.5081 29 29 22.5081 29 14.5C29 6.49187 22.5081 0 14.5 0C6.49187 0 0 6.49187 0 14.5C0 22.5081 6.49187 29 14.5 29ZM14.5 25.5C20.5751 25.5 25.5 20.5751 25.5 14.5C25.5 8.42487 20.5751 3.5 14.5 3.5C8.42487 3.5 3.5 8.42487 3.5 14.5C3.5 20.5751 8.42487 25.5 14.5 25.5Z\"\r\n                          fill=\"#00B533\"/>\r\n                </svg>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                Moves second\r\n            </button>;\r\n        } else {\r\n            button1 = <button id='X-now' className='x-b selected'>\r\n                <svg className='little-signs x' width=\"28\" height=\"28\" viewBox=\"0 0 28 28\"\r\n                     fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <rect y=\"2.47481\" width=\"3.49991\" height=\"35.9991\" rx=\"1.74996\"\r\n                          transform=\"rotate(-45 0 2.47481)\" fill=\"#CF0000\"/>\r\n                    <rect x=\"25.4552\" width=\"3.49991\" height=\"35.9991\" rx=\"1.74996\" transform=\"rotate(45 25.4552 0)\"\r\n                          fill=\"#CF0000\"/>\r\n                </svg>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                Moves first\r\n            </button>;\r\n            button2 = <button id='O' className='x-b' onClick={this.props.changeFirst}>\r\n                <svg className='little-signs o' width=\"29\" height=\"29\" viewBox=\"0 0 29 29\"\r\n                     fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M14.5 29C22.5081 29 29 22.5081 29 14.5C29 6.49187 22.5081 0 14.5 0C6.49187 0 0 6.49187 0 14.5C0 22.5081 6.49187 29 14.5 29ZM14.5 25.5C20.5751 25.5 25.5 20.5751 25.5 14.5C25.5 8.42487 20.5751 3.5 14.5 3.5C8.42487 3.5 3.5 8.42487 3.5 14.5C3.5 20.5751 8.42487 25.5 14.5 25.5Z\"\r\n                          fill=\"#00B533\"/>\r\n                </svg>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                Moves second\r\n            </button>;\r\n        }\r\n\r\n        let easy, hard;\r\n        if (this.props.isHard) {\r\n            easy = <button className='mode' onClick={this.props.changeMode}>Easy</button>;\r\n            hard = <button className='mode selected'>Hard</button>;\r\n        }\r\n        else {\r\n            easy = <button className='mode selected'>Easy</button>;\r\n            hard = <button className='mode' onClick={this.props.changeMode}>Hard</button>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"left\">\r\n                <h2 className='l1'>Play as:</h2>\r\n                {button1}\r\n                {button2}\r\n                <h2 className='l2'>Game mode</h2>\r\n                {easy}\r\n                {hard}\r\n                <button className='new-game' onClick={this.props.newGame}>\r\n                    <svg className='refresh' width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M24.4055 11.9641C23.8316 11.9641 23.3695 12.4262 23.3695 13C23.3695 18.718 18.718 23.3695 13 23.3695C7.28203 23.3695 2.63047 18.718 2.63047 13C2.63047 7.28203 7.28203 2.63047 13 2.63047C16.123 2.63047 19.0176 4.00664 20.9777 6.37305H17.3977C16.8238 6.37305 16.3617 6.83516 16.3617 7.40898C16.3617 7.98281 16.8238 8.44492 17.3977 8.44492H23.2172C23.791 8.44492 24.2531 7.98281 24.2531 7.40898V1.59453C24.2531 1.0207 23.791 0.558594 23.2172 0.558594C22.6434 0.558594 22.1812 1.0207 22.1812 1.59453V4.59063C19.8402 2.03633 16.5445 0.558594 13 0.558594C6.13945 0.558594 0.558594 6.13945 0.558594 13C0.558594 19.8605 6.13945 25.4414 13 25.4414C19.8605 25.4414 25.4414 19.8605 25.4414 13C25.4414 12.4262 24.9793 11.9641 24.4055 11.9641Z\"\r\n                            fill=\"white\"/>\r\n                    </svg>\r\n                    New game\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            firstIsO: false,\r\n            isHard: false,\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || (squares[i])) {\r\n            return false;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n        return true;\r\n    }\r\n\r\n    botMove() {\r\n        this.handleClick(botMind(this.state.history, this.state.isHard));\r\n    }\r\n\r\n    userClick(i) {\r\n        if (this.handleClick(i))\r\n            setTimeout(() => this.botMove(), 200);\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n        if (!step) {\r\n            this.setState({\r\n                history: [{\r\n                    squares: Array(9).fill(null),\r\n                }],\r\n            }, () => {\r\n                if (this.state[\"firstIsO\"]) this.botMove()\r\n            });\r\n        }\r\n    }\r\n\r\n    defineStatus(winner) {\r\n        const X = <svg className='little-sign' width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\"\r\n                       xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect y=\"2.47481\" width=\"3.49991\" height=\"35.9991\" rx=\"1.74996\" transform=\"rotate(-45 0 2.47481)\"\r\n                  fill=\"#CF0000\"/>\r\n            <rect x=\"25.4552\" width=\"3.49991\" height=\"35.9991\" rx=\"1.74996\" transform=\"rotate(45 25.4552 0)\"\r\n                  fill=\"#CF0000\"/>\r\n        </svg>;\r\n        const O = <svg className='little-sign' width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"none\"\r\n                       xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                  d=\"M14.5 29C22.5081 29 29 22.5081 29 14.5C29 6.49187 22.5081 0 14.5 0C6.49187 0 0 6.49187 0 14.5C0 22.5081 6.49187 29 14.5 29ZM14.5 25.5C20.5751 25.5 25.5 20.5751 25.5 14.5C25.5 8.42487 20.5751 3.5 14.5 3.5C8.42487 3.5 3.5 8.42487 3.5 14.5C3.5 20.5751 8.42487 25.5 14.5 25.5Z\"\r\n                  fill=\"#00B533\"/>\r\n        </svg>;\r\n        return winner ?\r\n            ((winner === 'X') === this.state[\"firstIsO\"]) ?\r\n                <p className='red'>You lose</p> :\r\n                <p className='green'>You won</p> :\r\n            this.state.stepNumber < 9 ?\r\n                [\r\n                    'Current player:',\r\n                    <div className='little-sign'> {this.state.xIsNext ? X : O} </div>\r\n                ] :\r\n                <span className='blue'>Draw</span>;\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.slice(1).map(\r\n            (step, move) => {\r\n                if ((move % 2 === 0) !== this.state['firstIsO']) {\r\n                    let userMove;\r\n                    if (this.state['firstIsO']) userMove = (move + 1) / 2;\r\n                    else userMove = (move + 2) / 2;\r\n                    const desc = 'Move #' + userMove;\r\n                    if (this.state.stepNumber !== move + 1)\r\n                        return (\r\n                            <button key={move} className='move-button' onClick={() => this.jumpTo(move + 1)}>\r\n                                {desc}\r\n                            </button>\r\n                        )\r\n                    else\r\n                        return (\r\n                            <button key={move} className='move-button selected'>\r\n                                {desc}\r\n                            </button>\r\n                        );\r\n                }\r\n            });\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.userClick(i)}\r\n                    />\r\n                </div>\r\n                <LeftBoard\r\n                    changeFirst={() => {\r\n                        this.setState({firstIsO: !this.state[\"firstIsO\"]});\r\n                        if (!this.state.stepNumber) this.jumpTo(0);\r\n                    }}\r\n                    changeMode={()=> {\r\n                        this.setState({isHard: !this.state.isHard});\r\n                        if (!this.state.stepNumber) this.jumpTo(0);\r\n                    }}\r\n                    firstIsO={this.state[\"firstIsO\"]}\r\n                    isHard={this.state.isHard}\r\n                    newGame={() => {\r\n                        this.jumpTo(0)\r\n                    }}\r\n                />\r\n                <div className=\"right\">\r\n                    <h2>Go to the move:</h2>\r\n                    {moves}\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    {this.defineStatus(winner)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game/>,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction lastMove(history) {\r\n    for (let i = 0; i < 9; i++) {\r\n        if (history[history.length - 1].squares[i] !== history[history.length - 2].squares[i]) {\r\n            return i;\r\n        }\r\n    }\r\n}\r\n\r\nfunction botMind(history, isHard) {\r\n    let squares = history[history.length - 1].squares.slice();\r\n    let count = 0;\r\n    for (let i = 0; i < 9; i++) {\r\n        if (squares[i]) count++;\r\n    }\r\n    let bot = (count % 2 === 0) ? 'X' : 'O';\r\n    let user = (count % 2 === 0) ? 'O' : 'X';\r\n\r\n    // First compulsive rule\r\n    for (let i = 0; i < squares.length; i++) {\r\n        if (squares[i] === null) {\r\n            squares[i] = bot;\r\n            if (calculateWinner(squares) === bot) {\r\n                squares[i] = null;\r\n                return i;\r\n            }\r\n            squares[i] = null;\r\n        }\r\n    }\r\n\r\n    // Second compulsive rule\r\n    for (let i = 0; i < squares.length; i++) {\r\n        if (squares[i] === null) {\r\n            squares[i] = user;\r\n            if (calculateWinner(squares) === user) {\r\n                squares[i] = null;\r\n                return i;\r\n            }\r\n            squares[i] = null;\r\n        }\r\n    }\r\n\r\n    let propers = [];\r\n    if (isHard) {\r\n        if (squares[4] == null) return 4;\r\n        let proper = Math.abs(lastMove(history) - 8);\r\n        if (proper === 4)\r\n            propers = [0, 2, 6, 8];\r\n        else if (proper === 3)\r\n            propers = [0, 6];\r\n        else if (proper === 5)\r\n            propers = [2, 8];\r\n        else if (proper % 2 !== 0)\r\n            propers = [proper - 1, proper + 1];\r\n        else propers = [proper];\r\n        \r\n        let counter = 0;\r\n        for (let i = 0; i < propers.length + counter; i++) {\r\n            if (squares[propers[i-counter]]) {\r\n                propers.splice(i - counter, 1);\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        if (propers.length === 0) {\r\n            propers = [0, 2, 6, 8];\r\n            counter = 0;\r\n            for (let i = 0; i < propers.length + counter; i++) {\r\n                if (squares[propers[i-counter]]) {\r\n                    propers.splice(i - counter, 1);\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (propers.length === 0) {\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (!squares[i]) propers.push(i);\r\n        }\r\n    }\r\n    return propers[Math.floor(Math.random() * (propers.length))];\r\n}\r\n"],"sourceRoot":""}